global goal robot

test_dh = [0   pi/2 4.5 0;
           9.8 0    0   0;
           9.5 0    0   0;
           3.5 pi/2 0   0];

dh_alter = [0  pi/2 0.45 0;
           0.98 0    0   0;
           0.95 0    0   0;
           0.35 pi/2 0   0];

goal = [1, 0.5, 1.5];
robot = generate_robot(dh_alter, 4, 4);
config = homeConfiguration(robot);
show(robot);

joints_limits = [pi * 2, pi, pi, pi];

pso = PSO_R(50, 50, 0.78, 1, 1, joints_limits);

pso = pso.init_particles;

pso = pso.optm_process;

result = pso.global_best{1};
result(2) = pi/2 - result(2);
disp(result);
% pso = pso.adjust_result([0, pi/2, 0, 0]);

disp(['global best by the end of the process (angles, fitness) ==> ', ...
    mat2str(pso.global_best{1}, 4), ', ', num2str(pso.global_best{2})]);

end_effector_pos = forward_kinematics(pso.global_best{1}, robot, true);
disp(['final position of end_effector ==> ', mat2str(end_effector_pos, 5)]);
disp(['the goal was ==> ', mat2str(goal, 3)]);