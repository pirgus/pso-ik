global goal robot

         % a    alp  d    theta  
test_dh = [0    pi/2 0.45  0;
           0.98 0     0    0;
           0.95 0     0    0;
           0.35 pi/2  0    0;
            0   0      0.45 0];
% having difficulties getting the dh params for the 5th joint...

dh_alter = [0  pi/2 4.5 0;
           9.8 0    0   0;
           9.5 0    0   0;
           3.5 pi/2 0   0];

n_bodies = 5;
n_joints = 5;
joints_limits = [pi, pi, pi/2, pi/2, pi/2];
goal = [-1 1 1];
robot = generate_robot(test_dh, n_bodies, n_joints, joints_limits);
config = homeConfiguration(robot);
show(robot);    

pso = PSO_R(50, 50, 0.78, 1, 1, joints_limits);

pso = pso.init_particles;

pso = pso.optm_process;

result = pso.global_best{1};
result(2) = - (pi/2) + result(2);
disp(result);

disp(['global best by the end of the process (angles, fitness) ==> ', ...
    mat2str(pso.global_best{1}, 4 ...
    ), ', ', num2str(pso.global_best{2})]);

end_effector_pos = forward_kinematics(pso.global_best{1}, robot, true, 'body5');
disp(['final position of end_effector ==> ', mat2str(end_effector_pos, 5)]);
disp(['the goal was ==> ', mat2str(goal, 3)]);

ik = inverseKinematics(r);